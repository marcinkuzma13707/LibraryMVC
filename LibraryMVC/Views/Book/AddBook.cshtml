@model WebModelService.BookModel.Contract.ViewModel.AddBookModel

@{
    Layout = null;
}
@using (Ajax.BeginForm("AddBook", "Book", Model, new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "Window",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "closeModal(response);"
}))
{
    <div>
         @Html.LabelFor(b => b.Author)
         @Html.TextBoxFor(b=>b.Author)
         @Html.ValidationMessageFor(b => b.Author)
    </div>

    <div>
        @Html.LabelFor(b => b.Title)
        @Html.TextBoxFor(b => b.Title)
        @Html.ValidationMessageFor(b => b.Title)
    </div>

    <div>
        @Html.LabelFor(b => b.ISBN)
        @Html.TextBoxFor(b => b.ISBN)
        @Html.ValidationMessageFor(b => b.ISBN)
    </div>

    <div>
        @Html.LabelFor(b => b.ReleaseDate)
        @Html.TextBoxFor(b => b.ReleaseDate)
        @Html.ValidationMessageFor(b => b.ReleaseDate)
    </div>

    <div>
        @Html.LabelFor(b => b.BookGenreName)
        @Html.TextBoxFor(b => b.BookGenreName)
        @Html.ValidationMessageFor(b => b.BookGenreName)
    </div>

    <div>
        @Html.LabelFor(b => b.Count)
        @Html.TextBoxFor(b => b.Count)
        @Html.ValidationMessageFor(b => b.Count)
    </div>
    <div>
        <input type="submit" value="Add book" />
    </div>
}
<script>
    function closeModal(response) {

        // the response is the Json Result sent back from the action

        if (response.success === true) {
            alert("Your book is overdue.");
            // actually got a true response back
        }
        $('#edit-person').modal('show'); // or similar code
    }
</script>